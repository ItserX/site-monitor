version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: sitemonitor
      POSTGRES_PASSWORD: sitemonitor
      POSTGRES_DB: sitemonitor
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - sitemonitor-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      CLUSTER_ID: a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - sitemonitor-net

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sitemonitor-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sitemonitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - sitemonitor-net

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
      - "9091:9091"
    restart: unless-stopped
    networks:
      - sitemonitor-net

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - sitemonitor-net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - sitemonitor-net

  crud-service:
    build:
      context: .
      dockerfile: Dockerfile.crud
    container_name: crud-service
    restart: always
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=/app/configs/crud.yaml
    volumes:
      - ./configs:/app/configs
    depends_on:
      - postgres
      - loki
    networks:
      - sitemonitor-net
    labels:
      - "logging=promtail"

  checker-service:
    build:
      context: .
      dockerfile: Dockerfile.checker
    container_name: checker-service
    restart: always
    environment:
      - CONFIG_PATH=/app/configs/checker.yaml
    volumes:
      - ./configs:/app/configs
    depends_on:
      - kafka
      - postgres
      - pushgateway
      - loki
    networks:
      - sitemonitor-net
    labels:
      - "logging=promtail"

  alert-service:
    build:
      context: .
      dockerfile: Dockerfile.alert
    container_name: alert-service
    restart: always
    environment:
      - CONFIG_PATH=/app/configs/alert.yaml
    volumes:
      - ./configs:/app/configs
    depends_on:
      - kafka
      - loki
    networks:
      - sitemonitor-net
    labels:
      - "logging=promtail"

networks:
  sitemonitor-net:
    driver: bridge

volumes:
  postgres-data:
  kafka-data:
  redis-data:
  prometheus-data:
  grafana-data:
  loki-data: